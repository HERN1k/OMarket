version: '3.7'

services:
  nginx:
    image: nginx:alpine
    container_name: nginx
    user: root
    volumes:
    - /home/prod/proxy/nginx:/etc/nginx/conf.d
    - /home/prod/appstorage/static:/app/wwwroot/static
    - /home/prod/proxy/certbot/conf:/etc/letsencrypt
    - /home/prod/proxy/certbot/lib:/var/lib/letsencrypt
    - /home/prod/proxy/certbot/www:/var/www/certbot
    ports:
    - "80:80"
    - "443:443"
    restart: always
    command: "/bin/sh -c 'while :; do sleep 6h & wait &&{!}; nginx -s reload; done & nginx -g \"daemon off;\"'"
    healthcheck:
      test: ["CMD", "service", "nginx", "status"]
      interval: 1m
      timeout: 10s
      retries: 3
      start_period: 10s
    networks:
    - omarket-network

  certbot:
    image: certbot/certbot
    restart: always
    user: root
    volumes:
      - /home/prod/proxy/certbot/conf:/etc/letsencrypt
      - /home/prod/proxy/certbot/lib:/var/lib/letsencrypt
      - /home/prod/proxy/certbot/www:/var/www/certbot
    entrypoint: "/bin/sh -c 'trap exit TERM; while :; do certbot renew; sleep 12h & wait $${!}; done;'"
    networks:
      - omarket-network

  omarket:
    image: ${DOCKER_REGISTRY-}omarket
    build:
      context: .
      dockerfile: OMarket/Dockerfile
    container_name: OMarket
    stop_grace_period: 1m
    environment:
      - ASPNETCORE_ENVIRONMENT=Production
      - ASPNETCORE_HTTP_PORTS=7558
      - TELEGRAM_BOT_TOKEN=7362390414:AAE-T5FRhD44anoWd73bp4aUpoHB9yA54l4
      - POSTGRESQL=Host=postgres;Port=5432;Database=OMarket;Username=postgres;Password=2356
      - REDIS_CONFIGURATION=redis:6379
      - REDIS_INSTANCE_NAME=omarket
      - HTTPS_APPLICATION_URL=https://dreamworkout.pp.ua
      - JWT_KEY=mlDa9d3AULiuGySbYrMUqWqQPGJyuZDm
      - WEBHOOK_URL=https://dreamworkout.pp.ua/api/bot
    ports:
      - "7558:7558"
    user: root
    volumes:
      - /home/prod/appstorage/dataprotectionkkeys:/app/.aspnet/DataProtection-Keys
      - /home/prod/appstorage/logs:/app/logs
      - /home/prod/appstorage/static:/app/wwwroot/static
    depends_on:
      - postgres
      - redis
    networks:
      - omarket-network
    restart: always
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:80/health"]
      interval: 1m
      timeout: 10s
      retries: 3
      start_period: 10s
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "5"
  postgres:
    image: postgres:17
    user: root
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: 2356
      POSTGRES_DB: OMarket
    ports:
      - "5432:5432"
    volumes:
      - /home/prod/dbs/postgres:/var/lib/postgresql/data
    networks:
      - omarket-network
    restart: always
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 1m
      timeout: 10s
      retries: 3
      start_period: 10s
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "5"
  redis:
    image: redis:latest
    user: root
    ports:
      - "6379:6379"
    volumes:
      - /home/prod/dbs/redis:/data
      - /home/prod/dbs/redis/config/redis.conf:/usr/local/etc/redis/redis.conf
    networks:
      - omarket-network
    restart: always
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 1m
      timeout: 10s
      retries: 3
      start_period: 10s
    command: ["redis-server", "/usr/local/etc/redis/redis.conf"]
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "5"

networks:
  omarket-network:
    driver: bridge